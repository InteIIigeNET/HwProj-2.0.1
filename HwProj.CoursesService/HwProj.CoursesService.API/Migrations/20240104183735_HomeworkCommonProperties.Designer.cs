// <auto-generated />
using System;
using HwProj.CoursesService.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HwProj.CoursesService.API.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20240104183735_HomeworkCommonProperties")]
    partial class HomeworkCommonProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HwProj.CoursesService.API.Models.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName");

                    b.Property<string>("InviteCode");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsOpen");

                    b.Property<string>("MentorIds");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.CourseMate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CourseId");

                    b.Property<bool>("IsAccepted");

                    b.Property<string>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseMates");
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CourseId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.GroupMate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GroupId");

                    b.Property<string>("StudentId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("GroupId", "StudentId");

                    b.ToTable("GroupMates");
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.Homework", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CourseId");

                    b.Property<DateTime?>("DeadlineDate");

                    b.Property<string>("Description");

                    b.Property<bool>("HasDeadline");

                    b.Property<bool>("IsDeadlineStrict");

                    b.Property<DateTime>("PublicationDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.HomeworkTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeadlineDate");

                    b.Property<string>("Description");

                    b.Property<bool?>("HasDeadline");

                    b.Property<long>("HomeworkId");

                    b.Property<bool?>("IsDeadlineStrict");

                    b.Property<int>("MaxRating");

                    b.Property<DateTime?>("PublicationDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("HomeworkId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.TaskModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GroupId");

                    b.Property<long>("TaskId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("TasksModels");
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.CourseMate", b =>
                {
                    b.HasOne("HwProj.CoursesService.API.Models.Course")
                        .WithMany("CourseMates")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.GroupMate", b =>
                {
                    b.HasOne("HwProj.CoursesService.API.Models.Group")
                        .WithMany("GroupMates")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.Homework", b =>
                {
                    b.HasOne("HwProj.CoursesService.API.Models.Course")
                        .WithMany("Homeworks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.HomeworkTask", b =>
                {
                    b.HasOne("HwProj.CoursesService.API.Models.Homework", "Homework")
                        .WithMany("Tasks")
                        .HasForeignKey("HomeworkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HwProj.CoursesService.API.Models.TaskModel", b =>
                {
                    b.HasOne("HwProj.CoursesService.API.Models.Group")
                        .WithMany("Tasks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
